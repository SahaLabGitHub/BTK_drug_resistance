# POVME 3.0 Sample Input File

# First, we need to define a point field that entirely encompasses all trajectory pockets.
GridSpacing            1.0                                 # The distance, in Angstroms, between
                                                           # adjacent points. Making this number
                                                           # lower improves accuracy at the
                                                           # expense of compute time.

InclusionSphere  48.00 29.00 37.00  5.0
InclusionSphere  43.44 29.60 37.66  7.0                 # Add a sphere of points to the pocket-

InclusionSphere  39.63 32.40 47.15  5.0           # Add a second sphere of points. Note
                                                           # that this sphere is included only for
                                                           # demonstration purposes. The point
                                                           # (-100.0 -100.0 -100.0) is actually far
                                                           # from the 4NSS.pdb structure.

#InclusionBox     100.0 100.0 100.0 10.0 10.0 10.0    # Add a rectangular prism ("box") of
                                                           # points to the pocket-encompassing
                                                           # region, centered on (100.0 100.0 100.0)
                                                           # and spanning 10.0 Angstroms in the x,
                                                           # y, and z directions, respectively.
                                                           # Again, this box is far from the
                                                           # 4NSS.pdb structure and is included only
                                                           # for demonstration purposes.


#InclusionCylinder  65.0 98.0 50.0 1.0 1.0 1.0 16.0 10.0   # Add a cylinder of points centered
                                                                # at [65.0 98.0 50.0], with its
								# length along the axis [1.0 1.0
								# 1.0], a radius of 16.0 angstroms,
								# and a height of 10.0 angstroms.


							   
#ExclusionSphere  -100.0 -100.0 -100.0 10.0           # Remove all points from the pocket-
                                                           # encompassing region that fall within
                                                           # a sphere centered at
                                                           # (-100.0 -100.0 -100.0) with radius
							   # 10.0.

#ExclusionBox     100.0 100.0 100.0 10.0 10.0 10.0    # Remove all points from the pocket-
                                                           # encompassing region that fall within a
                                                           # box, centered at (100.0 100.0 100.0)
                                                           # and spanning 10.0 Angstroms in the x,
							   # y, and z directions, respectively.

# Saving and loading the POVME points of the pocket-encompassing region.
#SavePoints            true                                 # You can optionally save the point
                                                           # field to a PDB file. As you can
							   # imagine, identifying just the right set
							   # of inclusion and exclusion spheres and
							   # boxes to encompass the binding pocket
							   # is challenging. One approach is to
							   # define an initial geometry, visualize
							   # that geometry together with the protein
							   # using a program like VMD, and then
							   # iteratively add new inclusion and
							   # exclusion regions as required. The
							   # ability to save the points for
							   # visualization is helpful. Additionally,
                                                           # if your point field contains many
							   # points, generating the field may be
							   # computationally intensive. If you want
							   # to use the same field for multiple
							   # POVME runs, using a saved copy of the
							   # field rather than repeatedly generating
							   # it from scratch is more efficient. Note
							   # that POVME also saves a NPY file, which
							   # contains the same data as the PDB file
							   # but can be loaded much faster in
							   # subsequent POVME runs. The point-field
							   # PDB file is saved to
							   # {PREFIX}point_field.pdb (see
							   # OutputFilenamePrefix below).

							   # Additionally, if you specify a
							   # contiguous-pocket seed region (see
							   # ContiguousPocketSeedSphere and
							   # ContiguousPocketSeedBox below), POVME
							   # will also save those points to
							   # {PREFIX}contiguous_pocket_seed_points.pdb
							   # for visualization.

#LoadPointsFilename    points.pdb.npy                      # You can optionally load previous point
                                                           # fields if you don't want to generate
							   # them using the comamnds above. Note
							   # that you should use the .pdb.npy file,
							   # not the pdb file.

# Load the PDB trajectory file
PDBFileName                 6x3p_WT_lastframe_povme_dt1.pdb                       # Load in the PDB trajectory file with
                                                           # the pocket you want to analyze.

# Tell POVME how to identify points that are within the binding pocket.
DistanceCutoff              1.09                           # Any point that comes within this
                                                           # distance of any receptor atom's van der
							   # Waals surface will not be considered
							   # part of the pocket volume. 1.09
							   # Angstroms was chosen as the default
							   # value because that is the van der Waals
							   # radius of a hydrogen atom.

ConvexHullExclusion         first                          # The convex hull is a method of
                                                           # determining where a pocket "ends" on
                                                           # the outside of the protein. Portions
                                                           # of the inclusion region which lie
                                                           # outside of the convex hull are removed.
                                                           # In previous versions, this would be
                                                           # recalculated for each individual frame,
                                                           # however this led to significant numerical
                                                           # noise as the motion of the protein in
                                                           # different frames could radically redefine
                                                           # the convex hull. A consistent convex hull
                                                           # can now be used in all frames by giving
                                                           # the "first" or "max" keywords
                                                           # here. "first" applied the convex hull from
                                                           # the first frame to all others."max" draws 
                                                           # a convex hull around all
                                                           # the frames superimposed simultaneously
                                                           # (and may take a while on large
                                                           # trajectories). To reproduce previous
                                                           # behavior, the "each" keyword may be used.
                                                           # Any other keyword will not use the convex
                                                           # hull exclusion method.



#SeedSphere  67.0 102.0 57.0 4.0                            # It's possible your pocket-encompassing
                                                           # point field defined above might include
                                                           # more than one pocket in at least some
                                                           # of the frames of your trajectory. You
                                                           # can instruct POVME to remove any points
                                                           # that are not contiguous with a user-
                                                           # defined "contiguous pocket seed
                                                           # region." This region, which is typically
                                                           # just a small sphere placed in the
                                                           # center of your primary pocket of
                                                           # interest, tells POVME which pocket to
                                                           # measure. If no such regions are
                                                           # specified, POVME will calculate the
                                                           # total volume accross all pockets
                                                           # covered by your pocket-encompassing
                                                           # point field, even if they are not
                                                           # contiguous.


ContiguousPointsCriteria    3                              # Two pocket volumes are considered
                                                           # "contiguous" if they share at least
							   # this number neighboring points in
							   # common. Note that points that are
							   # "kitty-corner" from each other count
							   # as neighbors.

# Tell POVME how to perform the calculations.
NumProcessors               1                              # POVME can use multiple processors on
                                                           # Unix-based systems.


# Tell POVME how to save the output
OutputFilenamePrefix          ./6x3p_WT_   # All the files POVME outputs will start
                                                           # with this prefix. POVME automatically
							   # creates any required directory
							   # (./POVME_test_run/ in this case).

CompressOutput                false                        # If you're short on disk space, POVME
                                                           # can automatically compress all output
							   # files using gz compression.
